\pset null 'âˆ…'
\set HISTFILE ~/.psql_history. :DBNAME
\set HISTSIZE 6000
\set HISTCONTROL ignoreboth
\timing

-- Print the running queries
\set queries 'select pid as PID, datname as DB, usename as User, application_name as Application, waiting as "Waiting", query as Query from pg_stat_activity where state = ''active'' and query not like ''%from pg_stat_activity%'';'

-- Prints the approximate count of all tables. Relies on vacuum analyse.
\set approx 'select relname, n_live_tup, n_dead_tup, n_tup_ins, n_tup_del, idx_scan, date_trunc(''minute'', last_autovacuum) from pg_stat_user_tables order by relname;'

-- Prints the columns in a table. Similar to \d <table> but without the noise
-- usage: :tables '<table>'
\set columns 'select column_name from information_schema.columns where table_name ='

-- Prints all tables in the given schem. Similar to \dt but without the noise.
-- usage: :tables '<schema>'
\set tables 'select table_name from information_schema.tables where table_schema = '

-- Prints all tables in the public schem. Similar to \dt but without the noise.
-- usage: :ptables
\set ptables 'select table_name from information_schema.tables where table_schema = ''public'';'

-- vim: ft=sql
